{
 "paragraphs": [
  {
   "text": "import org.apache.spark.sql.types.{DoubleType, StringType, StructField, StructType, IntegerType}\nimport org.apache.spark.sql.{functions => sf}",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:37:29+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "import org.apache.spark.sql.types.{DoubleType, StringType, StructField, StructType, IntegerType}\nimport org.apache.spark.sql.{functions=>sf}\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668454649702_428024726",
   "id": "paragraph_1668454649702_428024726",
   "dateCreated": "2022-11-14T22:37:29+0300",
   "dateStarted": "2022-11-14T22:37:29+0300",
   "dateFinished": "2022-11-14T22:37:30+0300",
   "status": "FINISHED"
  },
  {
   "text": "// Change the path according to your environment\nval basePath = \"/home/ayratsa/dev/spark_otus/final/data/\"",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:41:23+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mbasePath\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /home/ayratsa/dev/spark_otus/final/data/\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668454883425_1153156799",
   "id": "paragraph_1668454883425_1153156799",
   "dateCreated": "2022-11-14T22:41:23+0300",
   "dateStarted": "2022-11-14T22:41:23+0300",
   "dateFinished": "2022-11-14T22:41:23+0300",
   "status": "FINISHED"
  },
  {
   "text": "%md\n#### Load data",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T12:53:14+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "HTML",
      "data": "<div class=\"markdown-body\">\n<h4>Load data</h4>\n\n</div>"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668419594634_771876399",
   "id": "paragraph_1668419594634_771876399",
   "dateCreated": "2022-11-14T12:53:14+0300",
   "dateStarted": "2022-11-14T12:53:14+0300",
   "dateFinished": "2022-11-14T12:53:14+0300",
   "status": "FINISHED"
  },
  {
   "text": "// Define CSV file schema...\nval schema = StructType(\n    Array(\n        StructField(\"date\", StringType),\n        StructField(\"Temperature\", DoubleType),\n        StructField(\"Humidity\", DoubleType),\n        StructField(\"Light\", DoubleType),\n        StructField(\"CO2\", DoubleType),\n        StructField(\"HumidityRatio\", DoubleType),\n        StructField(\"Occupancy\", IntegerType)\n    )\n)",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:41:27+0300",
   "progress": 0.0,
   "config": {
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "colWidth": 12.0,
    "editorMode": "ace/mode/scala",
    "fontSize": 9.0,
    "results": {},
    "enabled": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mschema\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.types.StructType\u001b[0m = StructType(StructField(date,StringType,true), StructField(Temperature,DoubleType,true), StructField(Humidity,DoubleType,true), StructField(Light,DoubleType,true), StructField(CO2,DoubleType,true), StructField(HumidityRatio,DoubleType,true), StructField(Occupancy,IntegerType,true))\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668454887322_1382247745",
   "id": "paragraph_1668454887322_1382247745",
   "dateCreated": "2022-11-14T22:41:27+0300",
   "dateStarted": "2022-11-14T22:41:27+0300",
   "dateFinished": "2022-11-14T22:41:27+0300",
   "status": "FINISHED"
  },
  {
   "text": "// and load data from CSV file\nval df0 = spark.read.format(\"csv\")\n        .option(\"delimiter\", \",\")\n        .option(\"header\", \"true\")\n        .schema(schema)\n        .load(basePath + \"datatraining.csv\")\n",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:41:48+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mdf0\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [date: string, Temperature: double ... 5 more fields]\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668454908034_1504317350",
   "id": "paragraph_1668454908034_1504317350",
   "dateCreated": "2022-11-14T22:41:48+0300",
   "dateStarted": "2022-11-14T22:41:48+0300",
   "dateFinished": "2022-11-14T22:41:48+0300",
   "status": "FINISHED"
  },
  {
   "text": "df0.show()",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:42:01+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {}
     }
    },
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+-------------------+-----------+----------------+-----+----------------+------------------+---------+\n|               date|Temperature|        Humidity|Light|             CO2|     HumidityRatio|Occupancy|\n+-------------------+-----------+----------------+-----+----------------+------------------+---------+\n|2015-02-04 17:51:00|      23.18|          27.272|426.0|          721.25|0.0047929881765052|        1|\n|2015-02-04 17:51:59|      23.15|         27.2675|429.5|           714.0|0.0047834409493106|        1|\n|2015-02-04 17:53:00|      23.15|          27.245|426.0|           713.5|0.0047794635244219|        1|\n|2015-02-04 17:54:00|      23.15|            27.2|426.0|          708.25|0.0047715088260817|        1|\n|2015-02-04 17:55:00|       23.1|            27.2|426.0|           704.5|0.0047569929333151|        1|\n|2015-02-04 17:55:59|       23.1|            27.2|419.0|           701.0|0.0047569929333151|        1|\n|2015-02-04 17:57:00|       23.1|            27.2|419.0|701.666666666667|0.0047569929333151|        1|\n|2015-02-04 17:57:59|       23.1|            27.2|419.0|           699.0|0.0047569929333151|        1|\n|2015-02-04 17:58:59|       23.1|            27.2|419.0|689.333333333333|0.0047569929333151|        1|\n|2015-02-04 18:00:00|     23.075|          27.175|419.0|           688.0|0.0047453507196665|        1|\n|2015-02-04 18:01:00|     23.075|           27.15|419.0|          690.25|0.0047409518969426|        1|\n|2015-02-04 18:02:00|       23.1|            27.1|419.0|           691.0|0.0047393707305206|        1|\n|2015-02-04 18:03:00|       23.1|27.1666666666667|419.0|           683.5|0.0047511187556095|        1|\n|2015-02-04 18:04:00|      23.05|           27.15|419.0|           687.5|0.0047337317970825|        1|\n|2015-02-04 18:04:59|       23.0|          27.125|419.0|           686.0|0.0047149421459047|        1|\n|2015-02-04 18:06:00|       23.0|          27.125|418.5|           680.5|0.0047149421459047|        1|\n|2015-02-04 18:07:00|       23.0|            27.2|  0.0|           681.5|0.0047280779496687|        0|\n|2015-02-04 18:08:00|     22.945|           27.29|  0.0|           685.0|0.0047279513717807|        0|\n|2015-02-04 18:08:59|     22.945|           27.39|  0.0|           685.0|0.0047454083970941|        0|\n|2015-02-04 18:10:00|      22.89|           27.39|  0.0|           689.0|  0.00472950615591|        0|\n+-------------------+-----------+----------------+-----+----------------+------------------+---------+\nonly showing top 20 rows\n\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=18"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668454921882_213850440",
   "id": "paragraph_1668454921882_213850440",
   "dateCreated": "2022-11-14T22:42:01+0300",
   "dateStarted": "2022-11-14T22:42:01+0300",
   "dateFinished": "2022-11-14T22:42:02+0300",
   "status": "FINISHED"
  },
  {
   "text": "val dfTs = df0.select(sf.col(\"*\"), sf.to_timestamp(sf.col(\"date\"),\"yyyy-MM-dd HH:mm:ss\").as(\"timestamp\"))\nval colTs = sf.col(\"timestamp\")\nval df = dfTs.select(\n    sf.col(\"*\"),\n    sf.year(colTs).as(\"year\"),\n    sf.month(colTs).as(\"month\"),\n    sf.dayofmonth(colTs).as(\"day\"),\n    sf.hour(colTs).as(\"hour\"),\n    sf.minute(colTs).as(\"minute\")\n).drop(sf.col(\"date\"))\ndf.show()",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:42:19+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+-----------+----------------+-----+----------------+------------------+---------+-------------------+----+-----+---+----+------+\n|Temperature|        Humidity|Light|             CO2|     HumidityRatio|Occupancy|          timestamp|year|month|day|hour|minute|\n+-----------+----------------+-----+----------------+------------------+---------+-------------------+----+-----+---+----+------+\n|      23.18|          27.272|426.0|          721.25|0.0047929881765052|        1|2015-02-04 17:51:00|2015|    2|  4|  17|    51|\n|      23.15|         27.2675|429.5|           714.0|0.0047834409493106|        1|2015-02-04 17:51:59|2015|    2|  4|  17|    51|\n|      23.15|          27.245|426.0|           713.5|0.0047794635244219|        1|2015-02-04 17:53:00|2015|    2|  4|  17|    53|\n|      23.15|            27.2|426.0|          708.25|0.0047715088260817|        1|2015-02-04 17:54:00|2015|    2|  4|  17|    54|\n|       23.1|            27.2|426.0|           704.5|0.0047569929333151|        1|2015-02-04 17:55:00|2015|    2|  4|  17|    55|\n|       23.1|            27.2|419.0|           701.0|0.0047569929333151|        1|2015-02-04 17:55:59|2015|    2|  4|  17|    55|\n|       23.1|            27.2|419.0|701.666666666667|0.0047569929333151|        1|2015-02-04 17:57:00|2015|    2|  4|  17|    57|\n|       23.1|            27.2|419.0|           699.0|0.0047569929333151|        1|2015-02-04 17:57:59|2015|    2|  4|  17|    57|\n|       23.1|            27.2|419.0|689.333333333333|0.0047569929333151|        1|2015-02-04 17:58:59|2015|    2|  4|  17|    58|\n|     23.075|          27.175|419.0|           688.0|0.0047453507196665|        1|2015-02-04 18:00:00|2015|    2|  4|  18|     0|\n|     23.075|           27.15|419.0|          690.25|0.0047409518969426|        1|2015-02-04 18:01:00|2015|    2|  4|  18|     1|\n|       23.1|            27.1|419.0|           691.0|0.0047393707305206|        1|2015-02-04 18:02:00|2015|    2|  4|  18|     2|\n|       23.1|27.1666666666667|419.0|           683.5|0.0047511187556095|        1|2015-02-04 18:03:00|2015|    2|  4|  18|     3|\n|      23.05|           27.15|419.0|           687.5|0.0047337317970825|        1|2015-02-04 18:04:00|2015|    2|  4|  18|     4|\n|       23.0|          27.125|419.0|           686.0|0.0047149421459047|        1|2015-02-04 18:04:59|2015|    2|  4|  18|     4|\n|       23.0|          27.125|418.5|           680.5|0.0047149421459047|        1|2015-02-04 18:06:00|2015|    2|  4|  18|     6|\n|       23.0|            27.2|  0.0|           681.5|0.0047280779496687|        0|2015-02-04 18:07:00|2015|    2|  4|  18|     7|\n|     22.945|           27.29|  0.0|           685.0|0.0047279513717807|        0|2015-02-04 18:08:00|2015|    2|  4|  18|     8|\n|     22.945|           27.39|  0.0|           685.0|0.0047454083970941|        0|2015-02-04 18:08:59|2015|    2|  4|  18|     8|\n|      22.89|           27.39|  0.0|           689.0|  0.00472950615591|        0|2015-02-04 18:10:00|2015|    2|  4|  18|    10|\n+-----------+----------------+-----+----------------+------------------+---------+-------------------+----+-----+---+----+------+\nonly showing top 20 rows\n\n\u001b[1m\u001b[34mdfTs\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [date: string, Temperature: double ... 6 more fields]\n\u001b[1m\u001b[34mcolTs\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Column\u001b[0m = timestamp\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [Temperature: double, Humidity: double ... 10 more fields]\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=19"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668454939341_785714914",
   "id": "paragraph_1668454939341_785714914",
   "dateCreated": "2022-11-14T22:42:19+0300",
   "dateStarted": "2022-11-14T22:42:19+0300",
   "dateFinished": "2022-11-14T22:42:19+0300",
   "status": "FINISHED"
  },
  {
   "title": "",
   "text": "%md\n#### Data preparation",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T13:01:53+0300",
   "progress": 0.0,
   "config": {
    "title": false
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "HTML",
      "data": "<div class=\"markdown-body\">\n<h4>Data preparation</h4>\n\n</div>"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668420113654_1778075098",
   "id": "paragraph_1668420113654_1778075098",
   "dateCreated": "2022-11-14T13:01:53+0300",
   "dateStarted": "2022-11-14T13:01:53+0300",
   "dateFinished": "2022-11-14T13:01:53+0300",
   "status": "FINISHED"
  },
  {
   "text": "// Collect features to a vector\nimport org.apache.spark.ml.feature.VectorAssembler\nval featureColumns = Array(\"year\", \"month\", \"day\", \"hour\", \"minute\", \"Temperature\", \"Humidity\", \"Light\", \"CO2\", \"HumidityRatio\")\nval assembler = new VectorAssembler()\n        .setInputCols(featureColumns)\n        .setOutputCol(\"features\") \n\nval dfML = assembler.transform(df).select( \"features\", \"Occupancy\")\ndfML.show(5, truncate = false)\n",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:53:56+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {}
     }
    },
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+-----------------------------------------------------------------------+---------+\n|features                                                               |Occupancy|\n+-----------------------------------------------------------------------+---------+\n|[2015.0,2.0,4.0,17.0,51.0,23.18,27.272,426.0,721.25,0.0047929881765052]|1        |\n|[2015.0,2.0,4.0,17.0,51.0,23.15,27.2675,429.5,714.0,0.0047834409493106]|1        |\n|[2015.0,2.0,4.0,17.0,53.0,23.15,27.245,426.0,713.5,0.0047794635244219] |1        |\n|[2015.0,2.0,4.0,17.0,54.0,23.15,27.2,426.0,708.25,0.0047715088260817]  |1        |\n|[2015.0,2.0,4.0,17.0,55.0,23.1,27.2,426.0,704.5,0.0047569929333151]    |1        |\n+-----------------------------------------------------------------------+---------+\nonly showing top 5 rows\n\nimport org.apache.spark.ml.feature.VectorAssembler\n\u001b[1m\u001b[34mfeatureColumns\u001b[0m: \u001b[1m\u001b[32mArray[String]\u001b[0m = Array(year, month, day, hour, minute, Temperature, Humidity, Light, CO2, HumidityRatio)\n\u001b[1m\u001b[34massembler\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.VectorAssembler\u001b[0m = VectorAssembler: uid=vecAssembler_206fe105ffc8, handleInvalid=error, numInputCols=10\n\u001b[1m\u001b[34mdfML\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [features: vector, Occupancy: int]\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=21"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668455636396_1966582527",
   "id": "paragraph_1668455636396_1966582527",
   "dateCreated": "2022-11-14T22:53:56+0300",
   "dateStarted": "2022-11-14T22:53:56+0300",
   "dateFinished": "2022-11-14T22:53:56+0300",
   "status": "FINISHED"
  },
  {
   "text": "%md\n#### Train model",
   "user": "anonymous",
   "dateUpdated": "2022-10-21T14:32:19+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "HTML",
      "data": "<div class=\"markdown-body\">\n<h4>Train model</h4>\n\n</div>"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1666351939736_916831221",
   "id": "paragraph_1666351939736_916831221",
   "dateCreated": "2022-10-21T14:32:19+0300",
   "dateStarted": "2022-10-21T14:32:19+0300",
   "dateFinished": "2022-10-21T14:32:19+0300",
   "status": "FINISHED"
  },
  {
   "text": "// Prepare training and test data\nval dfs = dfML.randomSplit(Array(0.7, 0.3))\nval dfTrain = dfs(0)\nval dfTest = dfs(1)",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:54:15+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mdfs\u001b[0m: \u001b[1m\u001b[32mArray[org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]]\u001b[0m = Array([features: vector, Occupancy: int], [features: vector, Occupancy: int])\n\u001b[1m\u001b[34mdfTrain\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [features: vector, Occupancy: int]\n\u001b[1m\u001b[34mdfTest\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [features: vector, Occupancy: int]\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668455655562_1576480122",
   "id": "paragraph_1668455655562_1576480122",
   "dateCreated": "2022-11-14T22:54:15+0300",
   "dateStarted": "2022-11-14T22:54:15+0300",
   "dateFinished": "2022-11-14T22:54:15+0300",
   "status": "FINISHED"
  },
  {
   "text": "// Train and apply model\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\n\nval lr = new DecisionTreeClassifier()\n        .setLabelCol(\"Occupancy\")\n        .setFeaturesCol(\"features\")\nval lrModel = lr.fit(dfTrain)\nval pred = lrModel.transform(dfTest)\npred.show(5, truncate = false)",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:54:58+0300",
   "progress": 100.0,
   "config": {},
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {}
     }
    },
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+------------------------------------------------------------------------------+---------+-------------+-----------------------------------------+----------+\n|features                                                                      |Occupancy|rawPrediction|probability                              |prediction|\n+------------------------------------------------------------------------------+---------+-------------+-----------------------------------------+----------+\n|[2015.0,2.0,4.0,17.0,53.0,23.15,27.245,426.0,713.5,0.0047794635244219]        |1        |[1.0,115.0]  |[0.008620689655172414,0.9913793103448276]|1.0       |\n|[2015.0,2.0,4.0,17.0,55.0,23.1,27.2,419.0,701.0,0.0047569929333151]           |1        |[1.0,115.0]  |[0.008620689655172414,0.9913793103448276]|1.0       |\n|[2015.0,2.0,4.0,17.0,57.0,23.1,27.2,419.0,699.0,0.0047569929333151]           |1        |[1.0,115.0]  |[0.008620689655172414,0.9913793103448276]|1.0       |\n|[2015.0,2.0,4.0,17.0,57.0,23.1,27.2,419.0,701.666666666667,0.0047569929333151]|1        |[1.0,115.0]  |[0.008620689655172414,0.9913793103448276]|1.0       |\n|[2015.0,2.0,4.0,17.0,58.0,23.1,27.2,419.0,689.333333333333,0.0047569929333151]|1        |[1.0,115.0]  |[0.008620689655172414,0.9913793103448276]|1.0       |\n+------------------------------------------------------------------------------+---------+-------------+-----------------------------------------+----------+\nonly showing top 5 rows\n\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\n\u001b[1m\u001b[34mlr\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.classification.DecisionTreeClassifier\u001b[0m = dtc_5e6048a4745f\n\u001b[1m\u001b[34mlrModel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.classification.DecisionTreeClassificationModel\u001b[0m = DecisionTreeClassificationModel: uid=dtc_5e6048a4745f, depth=5, numNodes=33, numClasses=2, numFeatures=10\n\u001b[1m\u001b[34mpred\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [features: vector, Occupancy: int ... 3 more fields]\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=22"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=23"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=24"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=25"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=26"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=27"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=28"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=29"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=30"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=31"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668455698512_1433022909",
   "id": "paragraph_1668455698512_1433022909",
   "dateCreated": "2022-11-14T22:54:58+0300",
   "dateStarted": "2022-11-14T22:54:58+0300",
   "dateFinished": "2022-11-14T22:55:04+0300",
   "status": "FINISHED"
  },
  {
   "text": "// Evaluate the accuracy of the model\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nval evaluator = new MulticlassClassificationEvaluator()\n        .setLabelCol(\"Occupancy\")\n        .setPredictionCol(\"prediction\")\nval accuracy = evaluator.setMetricName(\"accuracy\").evaluate(pred)\nval precision =  evaluator.setMetricName(\"precisionByLabel\").evaluate(pred)\nval recall =  evaluator.setMetricName(\"recallByLabel\").evaluate(pred)\nval truePositiveRate =  evaluator.setMetricName(\"truePositiveRateByLabel\").evaluate(pred)\nval falsePositiveRate =  evaluator.setMetricName(\"falsePositiveRateByLabel\").evaluate(pred)\n",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:55:59+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "import org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\n\u001b[1m\u001b[34mevaluator\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\u001b[0m = MulticlassClassificationEvaluator: uid=mcEval_4dd54c3e4fda, metricName=falsePositiveRateByLabel, metricLabel=0.0, beta=1.0, eps=1.0E-15\n\u001b[1m\u001b[34maccuracy\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.991528842275111\n\u001b[1m\u001b[34mprecision\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.9969104016477858\n\u001b[1m\u001b[34mrecall\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.9923116350589442\n\u001b[1m\u001b[34mtruePositiveRate\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.9923116350589442\n\u001b[1m\u001b[34mfalsePositiveRate\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.011363636363636364\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=32"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=33"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=34"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=35"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=36"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668455759248_1697435102",
   "id": "paragraph_1668455759248_1697435102",
   "dateCreated": "2022-11-14T22:55:59+0300",
   "dateStarted": "2022-11-14T22:55:59+0300",
   "dateFinished": "2022-11-14T22:56:02+0300",
   "status": "FINISHED"
  },
  {
   "text": "%md\n#### Build a pipeline",
   "user": "anonymous",
   "dateUpdated": "2022-10-21T14:32:20+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "HTML",
      "data": "<div class=\"markdown-body\">\n<h4>Build a pipeline</h4>\n\n</div>"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1666351940733_1968340445",
   "id": "paragraph_1666351940733_1968340445",
   "dateCreated": "2022-10-21T14:32:20+0300",
   "dateStarted": "2022-10-21T14:32:20+0300",
   "dateFinished": "2022-10-21T14:32:20+0300",
   "status": "FINISHED"
  },
  {
   "text": "import org.apache.spark.ml.Pipeline\nval pipeline = new Pipeline().setStages(Array(assembler, lrModel))",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:56:55+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "import org.apache.spark.ml.Pipeline\n\u001b[1m\u001b[34mpipeline\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.Pipeline\u001b[0m = pipeline_8b8f9903e69a\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668455815405_421742246",
   "id": "paragraph_1668455815405_421742246",
   "dateCreated": "2022-11-14T22:56:55+0300",
   "dateStarted": "2022-11-14T22:56:55+0300",
   "dateFinished": "2022-11-14T22:56:55+0300",
   "status": "FINISHED"
  },
  {
   "text": "val Array(trainingData, testData) = df.randomSplit(Array(0.7, 0.3))\nval pipelineModel = pipeline.fit(trainingData)",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T22:57:58+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mtrainingData\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [Temperature: double, Humidity: double ... 10 more fields]\n\u001b[1m\u001b[34mtestData\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [Temperature: double, Humidity: double ... 10 more fields]\n\u001b[1m\u001b[34mpipelineModel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.PipelineModel\u001b[0m = pipeline_8b8f9903e69a\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668455878145_621068950",
   "id": "paragraph_1668455878145_621068950",
   "dateCreated": "2022-11-14T22:57:58+0300",
   "dateStarted": "2022-11-14T22:57:58+0300",
   "dateFinished": "2022-11-14T22:57:59+0300",
   "status": "FINISHED"
  },
  {
   "text": "// Save the whole pipeline\npipelineModel.write.overwrite().save(basePath + \"pipelineModel\")\n",
   "user": "anonymous",
   "dateUpdated": "2022-11-14T23:00:22+0300",
   "progress": 0.0,
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": []
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=37"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=38"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=39"
      },
      {
       "jobUrl": "http://a-118vzhsqotc4l.omnidata.skf.com:4040/jobs/job?id=40"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1668456022513_894969677",
   "id": "paragraph_1668456022513_894969677",
   "dateCreated": "2022-11-14T23:00:22+0300",
   "dateStarted": "2022-11-14T23:00:22+0300",
   "dateFinished": "2022-11-14T23:00:25+0300",
   "status": "FINISHED"
  }
 ],
 "name": "Zeppelin Notebook",
 "id": "",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false,
  "looknfeel": "default",
  "personalizedMode": "false"
 },
 "info": {}
}